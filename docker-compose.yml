version: '3.8'
services:
  service:
    build: ./loans-service
    container_name: loans-service
    restart: always
    ports:
      - "3000:3000"  # Service exposto na porta 3000
    volumes:
      - ./service:/app
      - /app/node_modules
    environment:
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypass
      DB_NAME: mydb
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      RABBITMQ_QUEUE_NAME: loans-queue
    depends_on:
      - db
      - rabbitmq

  consumer:
    build: ./loans-consumer
    container_name: loans-consumer
    restart: always
    volumes:
      - ./consumer:/app
      - /app/node_modules
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypass
      DB_NAME: mydb
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      RABBITMQ_QUEUE_NAME: loans-queue
    depends_on:
      - db
      - rabbitmq

  frontend:
    build: ./frontend
    container_name: loans-frontend
    restart: always
    ports:
      - "3001:3000"  # Frontend roda na porta 3000 dentro do container, mapeado para 3001 no host
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      PORT: 3000
      # URL do backend que o frontend usar√° para as chamadas API
      NEXT_PUBLIC_API_URL: http://service:3000

  db:
    image: postgres:14
    container_name: loans-db
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: loans-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  db_data:
